matOrder <- mat[,c(1,2,5,3,4)]
matOrder
head(matOrder)
tiff("OzoneHeatmap_labeled.tiff", width = 10, height = 10, units = 'in', res = 100)
pheatmap(matOrder, breaks=seq(from=-thr, to=thr, length=101), show_rownames=FALSE,cluster_col=FALSE, cutree_rows=8)
dev.off()
tiff("OzoneHeatmap_labeled.tiff", width = 10, height = 10, units = 'in', res = 100)
pheatmap(matOrder, breaks=seq(from=-thr, to=thr, length=101), show_rownames=FALSE,cluster_col=FALSE, cutree_rows=8)
dev.off()
betas <- coef(dds_trmt)
colnames(betas)
library("pheatmap")
#topGenes <- head(order(resTC$pvalue),20)
#mat <- betas[resSig_trmt, -c(1,2)]
topGenes <- head(order(res_trmt$padj),350)
mat <- betas[topGenes, -c(1)]
thr <- 3 # threshold for plotting
mat[mat < -thr] <- -thr
mat[mat > thr] <- thr
matOrder <- mat[,c(1,2,3,4,5)]
matOrder <- mat[,c(1,2,5,3,4)]
#withlabels
tiff("OzoneHeatmap_labeled.tiff", width = 10, height = 10, units = 'in', res = 100)
pheatmap(matOrder, breaks=seq(from=-thr, to=thr, length=101), show_rownames=FALSE,cluster_col=FALSE, cutree_rows=8)
dev.off()
pheatmap(matOrder, breaks=seq(from=-thr, to=thr, length=101), show_rownames=FALSE,cluster_col=FALSE, cutree_rows=8, labels_col=c("1","2","3","4","5"))
tiff("OzoneHeatmap_labeled.tiff", width = 10, height = 10, units = 'in', res = 100)
pheatmap(matOrder, breaks=seq(from=-thr, to=thr, length=101), show_rownames=FALSE,cluster_col=FALSE, cutree_rows=8, labels_col=c("1","2","3","4","5"))
dev.off()
tiff("OzoneHeatmap_labeled.tiff", width = 10, height = 10, units = 'in', res = 100)
pheatmap(matOrder, breaks=seq(from=-thr, to=thr, length=101), show_rownames=FALSE,cluster_col=FALSE, cutree_rows=8, labels_col=c("7 hours vs 14 days","14 days vs 28 days","80ppb vs normal atmospheric ozone","125ppb vs normal atmospheric ozone","225ppb vs normal atmospheric ozone"))
dev.off()
library("grid")
draw_colnames_45 <- function (coln, ...) {
m = length(coln)
x = (1:m)/m - 1/2/m
grid.text(coln, x = x, y = unit(0.96, "npc"), vjust = .5,
hjust = 1, rot = 45, gp = gpar(...)) ## Was 'hjust=0' and 'rot=270'
}
#withlabels
tiff("OzoneHeatmap_labeled.tiff", width = 10, height = 10, units = 'in', res = 100)
pheatmap(matOrder, breaks=seq(from=-thr, to=thr, length=101), show_rownames=FALSE,cluster_col=FALSE, cutree_rows=8, labels_col=c("7 hours vs 14 days","14 days vs 28 days","80ppb vs normal atmospheric ozone","125ppb vs normal atmospheric ozone","225ppb vs normal atmospheric ozone"))
dev.off()
## 'Overwrite' default draw_colnames with your own version
assignInNamespace(x="draw_colnames", value="draw_colnames_45",
ns=asNamespace("pheatmap"))
#withlabels
tiff("OzoneHeatmap_labeled.tiff", width = 10, height = 10, units = 'in', res = 100)
pheatmap(matOrder, breaks=seq(from=-thr, to=thr, length=101), show_rownames=FALSE,cluster_col=FALSE, cutree_rows=8, labels_col=c("7 hours vs 14 days","14 days vs 28 days","80ppb vs normal atmospheric ozone","125ppb vs normal atmospheric ozone","225ppb vs normal atmospheric ozone"))
dev.off()
library("grid")
library("pheatmap")
draw_colnames_45 <- function (coln, ...) {
m = length(coln)
x = (1:m)/m - 1/2/m
grid.text(coln, x = x, y = unit(0.96, "npc"), vjust = .5,
hjust = 1, rot = 90, gp = gpar(...)) ## Was 'hjust=0' and 'rot=270'
}
## 'Overwrite' default draw_colnames with your own version
assignInNamespace(x="draw_colnames", value="draw_colnames_45",
ns=asNamespace("pheatmap"))
#withlabels
tiff("OzoneHeatmap_labeled.tiff", width = 10, height = 10, units = 'in', res = 100)
pheatmap(matOrder, breaks=seq(from=-thr, to=thr, length=101), show_rownames=FALSE,cluster_col=FALSE, cutree_rows=8, labels_col=c("7 hours vs 14 days","14 days vs 28 days","80ppb vs normal atmospheric ozone","125ppb vs normal atmospheric ozone","225ppb vs normal atmospheric ozone"))
dev.off()
library("grid")
library("pheatmap")
draw_colnames_45 <- function (coln, ...) {
m = length(coln)
x = (1:m)/m - 1/2/m
grid.text(coln, x = x, y = unit(0.96, "npc"), vjust = .5,
hjust = 1, rot = 180, gp = gpar(...)) ## Was 'hjust=0' and 'rot=270'
}
## 'Overwrite' default draw_colnames with your own version
assignInNamespace(x="draw_colnames", value="draw_colnames_45",
ns=asNamespace("pheatmap"))
#withlabels
tiff("OzoneHeatmap_labeled.tiff", width = 10, height = 10, units = 'in', res = 100)
pheatmap(matOrder, breaks=seq(from=-thr, to=thr, length=101), show_rownames=FALSE,cluster_col=FALSE, cutree_rows=8, labels_col=c("7 hours vs 14 days","14 days vs 28 days","80ppb vs normal atmospheric ozone","125ppb vs normal atmospheric ozone","225ppb vs normal atmospheric ozone"))
dev.off()
library("grid")
library("pheatmap")
draw_colnames_45 <- function (coln, ...) {
m = length(coln)
x = (1:m)/m - 1/2/m
grid.text(coln, x = x, y = unit(0.96, "npc"), vjust = .5,
hjust = 1, rot = 0, gp = gpar(...)) ## Was 'hjust=0' and 'rot=270'
}
## 'Overwrite' default draw_colnames with your own version
assignInNamespace(x="draw_colnames", value="draw_colnames_45",
ns=asNamespace("pheatmap"))
#topGenes <- head(order(resTC$pvalue),20)
#mat <- betas[resSig_trmt, -c(1,2)]
#withlabels
tiff("OzoneHeatmap_labeled.tiff", width = 10, height = 10, units = 'in', res = 100)
pheatmap(matOrder, breaks=seq(from=-thr, to=thr, length=101), show_rownames=FALSE,cluster_col=FALSE, cutree_rows=8, labels_col=c("7 hours vs 14 days","14 days vs 28 days","80ppb vs normal atmospheric ozone","125ppb vs normal atmospheric ozone","225ppb vs normal atmospheric ozone"))
dev.off()
library("grid")
library("pheatmap")
draw_colnames_45 <- function (coln, ...) {
m = length(coln)
x = (1:m)/m - 1/2/m
grid.text(coln, x = x, y = unit(0.96, "npc"), vjust = .5,
hjust = 0, rot = 0, gp = gpar(...)) ## Was 'hjust=0' and 'rot=270'
}
## 'Overwrite' default draw_colnames with your own version
assignInNamespace(x="draw_colnames", value="draw_colnames_45",
ns=asNamespace("pheatmap"))
#topGenes <- head(order(resTC$pvalue),20)
#mat <- betas[resSig_trmt, -c(1,2)]
#withlabels
tiff("OzoneHeatmap_labeled.tiff", width = 10, height = 10, units = 'in', res = 100)
pheatmap(matOrder, breaks=seq(from=-thr, to=thr, length=101), show_rownames=FALSE,cluster_col=FALSE, cutree_rows=8, labels_col=c("7 hours vs 14 days","14 days vs 28 days","80ppb vs normal atmospheric ozone","125ppb vs normal atmospheric ozone","225ppb vs normal atmospheric ozone"))
dev.off()
library("grid")
library("pheatmap")
draw_colnames_45 <- function (coln, ...) {
m = length(coln)
x = (1:m)/m - 1/2/m
grid.text(coln, x = x, y = unit(0.96, "npc"), vjust = .5,
hjust = 2, rot = 0, gp = gpar(...)) ## Was 'hjust=0' and 'rot=270'
}
## 'Overwrite' default draw_colnames with your own version
assignInNamespace(x="draw_colnames", value="draw_colnames_45",
ns=asNamespace("pheatmap"))
#topGenes <- head(order(resTC$pvalue),20)
#mat <- betas[resSig_trmt, -c(1,2)]
#withlabels
tiff("OzoneHeatmap_labeled.tiff", width = 10, height = 10, units = 'in', res = 100)
pheatmap(matOrder, breaks=seq(from=-thr, to=thr, length=101), show_rownames=FALSE,cluster_col=FALSE, cutree_rows=8, labels_col=c("7 hours vs 14 days","14 days vs 28 days","80ppb vs normal atmospheric ozone","125ppb vs normal atmospheric ozone","225ppb vs normal atmospheric ozone"))
dev.off()
library("grid")
library("pheatmap")
draw_colnames_45 <- function (coln, ...) {
m = length(coln)
x = (1:m)/m - 1/2/m
grid.text(coln, x = x, y = unit(0.96, "npc"), vjust = .5,
hjust = 1, rot = 0, gp = gpar(...)) ## Was 'hjust=0' and 'rot=270'
}
## 'Overwrite' default draw_colnames with your own version
assignInNamespace(x="draw_colnames", value="draw_colnames_45",
ns=asNamespace("pheatmap"))
#topGenes <- head(order(resTC$pvalue),20)
#mat <- betas[resSig_trmt, -c(1,2)]
tiff("OzoneHeatmap_labeled.tiff", width = 10, height = 10, units = 'in', res = 100)
pheatmap(matOrder, breaks=seq(from=-thr, to=thr, length=101), show_rownames=FALSE,cluster_col=FALSE, cutree_rows=8, labels_col=c("7 hours vs 14 days","14 days vs 28 days","80ppb vs normal atmospheric ozone","125ppb vs normal atmospheric ozone","225ppb vs normal atmospheric ozone"))
dev.off()
library("grid")
library("pheatmap")
draw_colnames_45 <- function (coln, ...) {
m = length(coln)
x = (1:m)/m - 1/2/m
grid.text(coln, x = x, y = unit(0.96, "npc"), vjust = .5,
hjust = 0.5, rot = 0, gp = gpar(...)) ## Was 'hjust=0' and 'rot=270'
}
## 'Overwrite' default draw_colnames with your own version
assignInNamespace(x="draw_colnames", value="draw_colnames_45",
ns=asNamespace("pheatmap"))
#topGenes <- head(order(resTC$pvalue),20)
#withlabels
tiff("OzoneHeatmap_labeled.tiff", width = 10, height = 10, units = 'in', res = 100)
pheatmap(matOrder, breaks=seq(from=-thr, to=thr, length=101), show_rownames=FALSE,cluster_col=FALSE, cutree_rows=8, labels_col=c("7 hours vs 14 days","14 days vs 28 days","80ppb vs normal atmospheric ozone","125ppb vs normal atmospheric ozone","225ppb vs normal atmospheric ozone"))
dev.off()
?grid.text
pheatmap(matOrder, breaks=seq(from=-thr, to=thr, length=101), show_rownames=FALSE,cluster_col=FALSE, cutree_rows=8, labels_col=c("7 hours vs 14 days",strwrap("14 days vs 28 days", width = 10),"80ppb vs normal atmospheric ozone","125ppb vs normal atmospheric ozone","225ppb vs normal atmospheric ozone"))
tiff("OzoneHeatmap_labeled.tiff", width = 10, height = 10, units = 'in', res = 100)
pheatmap(matOrder, breaks=seq(from=-thr, to=thr, length=101), show_rownames=FALSE,cluster_col=FALSE, cutree_rows=8, labels_col=c("7 hours vs 14 days",strwrap("14 days vs 28 days", width = 10),"80ppb vs normal atmospheric ozone","125ppb vs normal atmospheric ozone","225ppb vs normal atmospheric ozone"))
dev.off()
library("grid")
library("pheatmap")
#withlabels
tiff("OzoneHeatmap_labeled.tiff", width = 10, height = 10, units = 'in', res = 100)
pheatmap(matOrder, breaks=seq(from=-thr, to=thr, length=101), show_rownames=FALSE,cluster_col=FALSE, cutree_rows=8, labels_col=c("7 hours vs 14 days",strwrap("14 days vs 28 days", width = 10),"80ppb vs normal atmospheric ozone","125ppb vs normal atmospheric ozone","225ppb vs normal atmospheric ozone"))
dev.off()
library("pheatmap")
#withlabels
tiff("OzoneHeatmap_labeled.tiff", width = 10, height = 10, units = 'in', res = 100)
pheatmap(matOrder, breaks=seq(from=-thr, to=thr, length=101), show_rownames=FALSE,cluster_col=FALSE, cutree_rows=8, labels_col=c("7 hours vs 14 days",strwrap("14 days vs 28 days", width = 10),"80ppb vs normal atmospheric ozone","125ppb vs normal atmospheric ozone","225ppb vs normal atmospheric ozone"))
dev.off()
library("grid")
library("pheatmap")
draw_colnames_45 <- function (coln, ...) {
m = length(coln)
x = (1:m)/m - 1/2/m
grid.text(coln, x = x, y = unit(0.96, "npc"), vjust = .5,
hjust = 0.5, rot = 270, gp = gpar(...)) ## Was 'hjust=0' and 'rot=270'
}
## 'Overwrite' default draw_colnames with your own version
assignInNamespace(x="draw_colnames", value="draw_colnames_45",
ns=asNamespace("pheatmap"))
#topGenes <- head(order(resTC$pvalue),20)
#mat <- betas[resSig_trmt, -c(1,2)]
#withlabels
tiff("OzoneHeatmap_labeled.tiff", width = 10, height = 10, units = 'in', res = 100)
pheatmap(matOrder, breaks=seq(from=-thr, to=thr, length=101), show_rownames=FALSE,cluster_col=FALSE, cutree_rows=8, labels_col=c("7 hours vs 14 days",strwrap("14 days vs 28 days", width = 10),"80ppb vs normal atmospheric ozone","125ppb vs normal atmospheric ozone","225ppb vs normal atmospheric ozone"))
dev.off()
library("grid")
library("pheatmap")
draw_colnames_45 <- function (coln, ...) {
m = length(coln)
x = (1:m)/m - 1/2/m
grid.text(coln, x = x, y = unit(0.96, "npc"), vjust = .5,
hjust = 0, rot = 270, gp = gpar(...)) ## Was 'hjust=0' and 'rot=270'
}
## 'Overwrite' default draw_colnames with your own version
assignInNamespace(x="draw_colnames", value="draw_colnames_45",
ns=asNamespace("pheatmap"))
#topGenes <- head(order(resTC$pvalue),20)
#mat <- betas[resSig_trmt, -c(1,2)]
#withlabels
tiff("OzoneHeatmap_labeled.tiff", width = 10, height = 10, units = 'in', res = 100)
pheatmap(matOrder, breaks=seq(from=-thr, to=thr, length=101), show_rownames=FALSE,cluster_col=FALSE, cutree_rows=8, labels_col=c("7 hours vs 14 days",strwrap("14 days vs 28 days", width = 10),"80ppb vs normal atmospheric ozone","125ppb vs normal atmospheric ozone","225ppb vs normal atmospheric ozone"))
dev.off()
tiff("OzoneHeatmap_labeled.tiff", width = 10, height = 10, units = 'in', res = 100)
pheatmap(matOrder, breaks=seq(from=-thr, to=thr, length=101), show_rownames=FALSE,cluster_col=FALSE, cutree_rows=8, labels_col=c("7 hours vs 14 days",strwrap("14 days vs 28 days", width = 30),"80ppb vs normal atmospheric ozone","125ppb vs normal atmospheric ozone","225ppb vs normal atmospheric ozone"))
dev.off()
#withlabels
tiff("OzoneHeatmap_labeled.tiff", width = 10, height = 10, units = 'in', res = 100)
pheatmap(matOrder, breaks=seq(from=-thr, to=thr, length=101), show_rownames=FALSE,cluster_col=FALSE, cutree_rows=8, labels_col=c("7 hours vs 14 days","14 days vs 28 days","80ppb vs normal atmospheric ozone","125ppb vs normal atmospheric ozone","225ppb vs normal atmospheric ozone"))
dev.off()
#white labels
tiff("OzoneHeatmap_whitelabel.tiff", width = 10, height = 10, units = 'in', res = 100)
pheatmap(mat, breaks=seq(from=-thr, to=thr, length=101), show_rownames=FALSE, labels_col=c("                                                ","      ","      ","      ","      "),cluster_col=FALSE, cutree_rows=8)
dev.off()
#white labels
tiff("OzoneHeatmap_whitelabel.tiff", width = 10, height = 10, units = 'in', res = 100)
pheatmap(matOrder, breaks=seq(from=-thr, to=thr, length=101), show_rownames=FALSE, labels_col=c("                                                ","      ","      ","      ","      "),cluster_col=FALSE, cutree_rows=8)
dev.off()
#withlabels
tiff("OzoneHeatmap_labeled.tiff", width = 5, height = 10, units = 'in', res = 100)
pheatmap(matOrder, breaks=seq(from=-thr, to=thr, length=101), show_rownames=FALSE,cluster_col=FALSE, cutree_rows=8, labels_col=c("7 hours vs 14 days","14 days vs 28 days","80ppb vs normal atmospheric ozone","125ppb vs normal atmospheric ozone","225ppb vs normal atmospheric ozone"))
dev.off()
#withlabels
tiff("OzoneHeatmap_labeled.tiff", width = 3, height = 10, units = 'in', res = 100)
pheatmap(matOrder, breaks=seq(from=-thr, to=thr, length=101), show_rownames=FALSE,cluster_col=FALSE, cutree_rows=8, labels_col=c("7 hours vs 14 days","14 days vs 28 days","80ppb vs normal atmospheric ozone","125ppb vs normal atmospheric ozone","225ppb vs normal atmospheric ozone"))
dev.off()
tiff("OzoneHeatmap_labeled.tiff", width = 4, height = 10, units = 'in', res = 100)
pheatmap(matOrder, breaks=seq(from=-thr, to=thr, length=101), show_rownames=FALSE,cluster_col=FALSE, cutree_rows=8, labels_col=c("7 hours vs 14 days","14 days vs 28 days","80ppb vs normal atmospheric ozone","125ppb vs normal atmospheric ozone","225ppb vs normal atmospheric ozone"))
dev.off()
head(mat)
tiff("OzoneHeatmap_labeled.tiff", width = 4, height = 10, units = 'in', res = 100)
pheatmap(matOrder, breaks=seq(from=-thr, to=thr, length=101), show_rownames=FALSE,cluster_col=FALSE, cutree_rows=8, labels_col=c("7 hours vs 14 days","7 hours vs 28 days","80ppb vs normal atmospheric ozone","125ppb vs normal atmospheric ozone","225ppb vs normal atmospheric ozone"))
dev.off()
#withlabels
tiff("OzoneHeatmap_labeled.tiff", width = 4, height = 10, units = 'in', res = 100)
pheatmap(matOrder, breaks=seq(from=-thr, to=thr, length=101), show_rownames=FALSE,cluster_col=FALSE, cutree_rows=8, labels_col=c("14 days vs 7 hours","28 days vs 7 hours","80ppb vs normal atmospheric ozone","125ppb vs normal atmospheric ozone","225ppb vs normal atmospheric ozone"))
dev.off()
require(gplots)
require(RColorBrewer)
library(plyr)
# function to read table and add a third column with the filename
read_tsv_filename <- function(filename){
ret <- read.table(filename, colClasses = c(
"NULL", "numeric", "NULL", "NULL", "NULL", "NULL", "NULL", "character", "NULL"), header=FALSE, sep="\t")
ret$Source <- filename #EDIT
ret
}
################
# Heatmap v1.1
################
heat <- function(matrix, name) {
#colfunc1 <- colorRampPalette(c("green", "red", "white"))
colfunc1 <- colorRampPalette(c("darkgreen", "green" ,"white"))
#colfunc1 <- colorRampPalette(c("white", "green", "black"))
#colfunc2 <- colorRampPalette(c("black", "red"))
#hmcols <- c(colfunc1(200), colfunc2(200*(1 - 0.004078)))
hmcols <- c(colfunc1(200))
tiff(name, width = 10, height = 10, units = 'in', res = 100)
heatmap.2(as.matrix(matrix),
scale="none",
col=hmcols,
trace="none",
rowsep=(1:62),
colsep=(1:62),
sepcolor="grey",
sepwidth=c(0.05,0.05),
cexCol=0.8,
cexRow=0.8,
srtRow=0,
dendrogram="none",
Rowv=FALSE,
Colv=FALSE,
keysize=1,
margins=c(15,25)
)
dev.off()
}
#old function for read.table on matrix of files
#dataset <- ldply(sampleFiles, read.table, colClasses = c("NULL", "numeric", "NULL", "NULL", "NULL", "NULL", "NULL", "character", "NULL"), header=FALSE, sep="\t")
# load data
setwd("~/1_greenAsh/analysis/2_BiNGO/")
#sampleFiles<-list.files()
#sampleFilesDw <- grep("Dw.DE.enr.tsv",list.files(),value=TRUE)
#sampleFilesUp <- grep("Up.DE.enr.tsv",list.files(),value=TRUE)
sampleFilesAll <- grep("Up|Down",list.files(),value=TRUE)
sampleFilesAll
sampleFilesAll <- grep("Up|Down|Response",list.files(),value=TRUE)
sampleFilesAll
datasetAll <- ldply(sampleFilesAll, read_tsv_filename)
matAll <- daply(datasetAll, .(V8, Source), function(x) x$V2)
matAll[is.na(matAll)]<-0
matMax = max(matAll)
matAll <- daply(datasetAll, .(V8, Source), function(x) x$V2)
#matAll[is.na(matAll)] <- matMax + 0.001
matAll[is.na(matAll)] <- 0.05
heat(matAll, "All.tiff")
matReOrder <- matAll[,c(9,10,7,8,5,6,15,16,13,14,11,12,3,4,1,2,17)]
#heat(matReOrder, "All.tiff")
test <- matReOrder[-2,]
#heat(test, "All.tiff")
test2 <- test[-16,]
heat(test2, "All.tiff")
require(gplots)
require(RColorBrewer)
library(plyr)
# function to read table and add a third column with the filename
read_tsv_filename <- function(filename){
ret <- read.table(filename, colClasses = c(
"NULL", "numeric", "NULL", "NULL", "NULL", "NULL", "NULL", "character", "NULL"), header=FALSE, sep="\t")
ret$Source <- filename #EDIT
ret
}
##--------------------------
## Heatmap v1.1
##--------------------------
heat <- function(matrix, name) {
colfunc1 <- colorRampPalette(c("darkgreen", "green" ,"white"))
hmcols <- c(colfunc1(200))
tiff(name, width = 10, height = 10, units = 'in', res = 100)
heatmap.2(as.matrix(matrix),
scale="none",
col=hmcols,
trace="none",
rowsep=(1:62),
colsep=(1:62),
sepcolor="grey",
sepwidth=c(0.05,0.05),
cexCol=0.8,
cexRow=0.8,
srtRow=0,
dendrogram="none",
Rowv=FALSE,
Colv=FALSE,
keysize=1,
margins=c(15,25)
)
dev.off()
}
# load data
setwd("~/1_greenAsh/analysis/2_BiNGO/")
sampleFilesAll <- grep("Up|Down|Response",list.files(),value=TRUE)
# read data into a dataframe
datasetAll <- ldply(sampleFilesAll, read_tsv_filename)
# transform into a matrix all
matAll <- daply(datasetAll, .(V8, Source), function(x) x$V2)
matAll[is.na(matAll)] <- 0.05
# reorder columns
matReOrder <- matAll[,c(9,10,7,8,5,6,15,16,13,14,11,12,3,4,1,2,17)]
# remove biological process
matNoBP <- matReOrder[-2,]
# remove molecular function
matNoMF <- matNoBP[-16,]
# generate heatmap
heat(matNoMF, "GreenAsh_All.tiff")
##-----------------------------------------------------------------
## hm_bingo.R (heatmap bingo) is an Rscript used to
## read in BiNGO GO enrichment results and generate a heatmap used in
## "De novo assembly of the green ash transcriptome and
## identification of genes responding to abiotic and biotic stress"
## Lane et. al. 2015
##
## hm_bingo.R assumes a directory in home called "hm_bingo" exists
## hm_bingo.R also assumes a sub-directory in home called bgo
## exists and contains headless output from BiNGO.
##
## hm_bingo.R will create a single output Tiff "GreenAsh_All.tiff"
##
##--------------------------
## Load required packages
##--------------------------
require(gplots)
require(RColorBrewer)
library(plyr)
##--------------------------
## Readtable function
##--------------------------
read_tsv_filename <- function(filename){
ret <- read.table(filename, colClasses = c(
"NULL", "numeric", "NULL", "NULL", "NULL", "NULL", "NULL", "character", "NULL"), header=FALSE, sep="\t")
ret$Source <- filename #EDIT
ret
}
##--------------------------
## Heatmap function
##--------------------------
heat <- function(matrix, name) {
colfunc1 <- colorRampPalette(c("darkgreen", "green" ,"white"))
hmcols <- c(colfunc1(200))
tiff(name, width = 10, height = 10, units = 'in', res = 100)
heatmap.2(as.matrix(matrix),
scale="none",
col=hmcols,
trace="none",
rowsep=(1:62),
colsep=(1:62),
sepcolor="grey",
sepwidth=c(0.05,0.05),
cexCol=0.8,
cexRow=0.8,
srtRow=0,
dendrogram="none",
Rowv=FALSE,
Colv=FALSE,
keysize=1,
margins=c(15,25)
)
dev.off()
}
# load data
setwd("~/hm_bingo/bgo/")
sampleFilesAll <- list.files()
# read data into a dataframe
datasetAll <- ldply(sampleFilesAll, read_tsv_filename)
# transform into a matrix all
matAll <- daply(datasetAll, .(V8, Source), function(x) x$V2)
matAll[is.na(matAll)] <- 0.05
# reorder columns
matReOrder <- matAll[,c(9,10,7,8,5,6,15,16,13,14,11,12,3,4,1,2,17)]
# remove biological process
matNoBP <- matReOrder[-2,]
# remove molecular function
matNoMF <- matNoBP[-16,]
# generate heatmap
setwd("~/hm_bingo/")
heat(matNoMF, "GreenAsh_All.tiff")
##-----------------------------------------------------------------
## hm_bingo.R (heatmap bingo) is an Rscript used to
## read in BiNGO GO enrichment results and generate a heatmap used in
## "De novo assembly of the green ash transcriptome and
## identification of genes responding to abiotic and biotic stress"
## Lane et. al. 2015
##
## hm_bingo.R assumes a directory in home called "hm_bingo" exists
## hm_bingo.R also assumes a sub-directory in home called bgo
## exists and contains headless output from BiNGO.
##
## Headless output from BiNGO can be generated by saving output from BiNGO
## and parsing out all lines that begin with "GO-ID". For example using grep:
## $ grep "^GO-ID" ColdOUTPUT.bgo > headless_ColdOUTPUT.bgo
##
## hm_bingo.R will create a single output Tiff "GreenAsh_All.tiff"
##
##--------------------------
## Load required packages
##--------------------------
require(gplots)
require(RColorBrewer)
library(plyr)
##--------------------------
## Readtable function
##--------------------------
read_tsv_filename <- function(filename){
ret <- read.table(filename, colClasses = c(
"NULL", "numeric", "NULL", "NULL", "NULL", "NULL", "NULL", "character", "NULL"), header=FALSE, sep="\t")
ret$Source <- filename #EDIT
ret
}
##--------------------------
## Heatmap function
##--------------------------
heat <- function(matrix, name) {
colfunc1 <- colorRampPalette(c("darkgreen", "green" ,"white"))
hmcols <- c(colfunc1(200))
tiff(name, width = 10, height = 10, units = 'in', res = 100)
heatmap.2(as.matrix(matrix),
scale="none",
col=hmcols,
trace="none",
rowsep=(1:62),
colsep=(1:62),
sepcolor="grey",
sepwidth=c(0.05,0.05),
cexCol=0.8,
cexRow=0.8,
srtRow=0,
dendrogram="none",
Rowv=FALSE,
Colv=FALSE,
keysize=1,
margins=c(15,25)
)
dev.off()
}
# load data
setwd("~/hm_bingo/bgo/")
sampleFilesAll <- list.files()
# read data into a dataframe
datasetAll <- ldply(sampleFilesAll, read_tsv_filename)
# transform into a matrix all
matAll <- daply(datasetAll, .(V8, Source), function(x) x$V2)
matAll[is.na(matAll)] <- 0.05
# reorder columns
matReOrder <- matAll[,c(9,10,7,8,5,6,15,16,13,14,11,12,3,4,1,2,17)]
setwd("~/hm_bingo/")
heat(matReOrder, "GreenAsh_All.tiff")
setwd("~/hm_bingo/")
heat(matNoBP, "GreenAsh_All.tiff")
View(matNoBP)
matNoMF <- matNoBP[-18,]
# generate heatmap
setwd("~/hm_bingo/")
heat(matNoMF, "GreenAsh_All.tiff")
